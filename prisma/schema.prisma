datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id          BigInt     @id @default(autoincrement())
    uid         String     @unique @db.Uuid
    email       String     @unique
    firstname   String
    lastname    String
    phonenumber String     @unique
    score       Int        @default(0)
    userRole    UserRole[]
    Task        Task[]
    UserTask    UserTask[]

    @@unique([firstname, lastname])
}

model Role {
    id          BigInt     @id @default(autoincrement())
    name        String     @unique
    permissions String[]
    userRole    UserRole[]
}

model UserRole {
    id     BigInt @id @default(autoincrement())
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId BigInt
    role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)
    roleId BigInt

    @@unique([userId, roleId])
}

model Task {
    id          BigInt     @id @default(autoincrement())
    title       String
    description String
    points      Int        @default(0)
    dueDate     DateTime
    createdAt   DateTime
    issuer      User       @relation(fields: [issuerId], references: [id])
    issuerId    BigInt
    UserTask    UserTask[]
}

model UserTask {
    id       BigInt  @id @default(autoincrement())
    finished Boolean @default(false)
    approved Boolean @default(true)
    user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId   BigInt
    task     Task    @relation(fields: [taskId], references: [id], onDelete: Cascade)
    taskId   BigInt

    @@unique([userId, taskId])
}
